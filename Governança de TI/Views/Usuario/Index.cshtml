@model IEnumerable<Governança_de_TI.Models.UsuarioModel>

@{
    ViewData["Title"] = "Usuários";
}

<!-- ===========================
     CABEÇALHO E ALERTAS
=========================== -->
<div class="container-fluid px-3">
    <div id="ajax-success-alert-placeholder"></div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div id="success-alert" class="alert alert-success alert-dismissible fade show shadow-sm mt-3" role="alert">
            <i class="bi bi-check-circle-fill me-2"></i>@TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Fechar"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div id="error-alert" class="alert alert-danger alert-dismissible fade show shadow-sm mt-3" role="alert">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>@TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Fechar"></button>
        </div>
    }

    <!-- ===========================
         CARD PRINCIPAL
    ============================ -->
    <div class="card shadow-sm mt-4 border-0 rounded-3">
        <div class="card-body p-4">
            <div class="d-flex justify-content-between align-items-center mb-4 flex-wrap gap-2">
                <h4 class="fw-semibold text-muted m-0">
                    <i class="bi bi-people-fill me-2 text-primary"></i>Lista de Usuários
                </h4>
                <button id="btnNovoUsuario" type="button" class="btn btn-primary d-flex align-items-center"
                        style="background-color:#8A2BE2;border-color:#8A2BE2;">
                    <i class="bi bi-plus-lg me-2"></i> Novo Usuário
                </button>
            </div>

            <!-- ===========================
                 TABELA DE USUÁRIOS
            ============================ -->
            <div class="table-responsive rounded-3 border">
                <table class="table align-middle table-hover mb-0 text-center">
                    <thead class="table-light">
                        <tr>
                            <th>Foto</th>
                            <th>Nome</th>
                            <th>Email</th>
                            <th>Departamento</th>
                            <th>Perfil</th>
                            <th>Status</th>
                            <th>Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Any())
                        {
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        @if (item.FotoPerfil != null && item.FotoPerfil.Length > 0)
                                        {
                                            var base64 = Convert.ToBase64String(item.FotoPerfil);
                                            <img src="data:image/png;base64,@base64"
                                                 class="rounded-circle border shadow-sm"
                                                 style="width:45px;height:45px;object-fit:cover;" />
                                        }
                                        else
                                        {
                                            <img src="~/img/default-user.png"
                                                 class="rounded-circle border shadow-sm"
                                                 style="width:45px;height:45px;object-fit:cover;" />
                                        }
                                    </td>
                                    <td class="fw-semibold">@item.Nome</td>
                                    <td class="text-muted">@item.Email</td>
                                    <td>@(item.Departamento?.Nome ?? "-")</td>
                                    <td>
                                        <span class="badge bg-secondary-subtle text-secondary px-3 py-1 rounded-pill">@item.Perfil</span>
                                    </td>
                                    <td>
                                        @if (item.Status == "Ativo")
                                        {
                                            <span class="badge bg-success-subtle text-success px-3 py-1 rounded-pill">Ativo</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-danger-subtle text-danger px-3 py-1 rounded-pill">Inativo</span>
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <button type="button" class="btn btn-sm btn-outline-primary btn-editar-usuario"
                                                    data-usuario-id="@item.Id" title="Editar">
                                                <i class="bi bi-pencil"></i>
                                            </button>
                                            <button type="button" class="btn btn-sm btn-outline-secondary btn-detalhes-usuario"
                                                    data-usuario-id="@item.Id" title="Detalhes">
                                                <i class="bi bi-eye"></i>
                                            </button>
                                            <button type="button" class="btn btn-sm btn-outline-danger btn-excluir-usuario"
                                                    data-usuario-id="@item.Id" title="Excluir">
                                                <i class="bi bi-trash3"></i>
                                            </button>
                                            <form asp-action="RedefinirSenha" asp-route-id="@item.Id" method="post" class="d-inline"
                                                  onsubmit="return confirm('Deseja redefinir a senha deste usuário?');">
                                                @Html.AntiForgeryToken()
                                                <button type="submit" class="btn btn-sm btn-outline-warning" title="Redefinir Senha">
                                                    <i class="bi bi-key"></i>
                                                </button>
                                            </form>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="7" class="text-center py-4 text-muted">
                                    <i class="bi bi-info-circle me-2"></i> Nenhum usuário encontrado.
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- ===========================
     MODAL PRINCIPAL (USUÁRIO)
=========================== -->
<div class="modal fade" id="userModal" tabindex="-1" aria-labelledby="userModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content border-0 shadow-lg rounded-4">
            <div class="modal-header border-0 pb-0">
                <h5 class="modal-title fw-semibold text-muted" id="userModalLabel">Carregando...</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
            </div>
            <div class="modal-body p-4">
                <div class="text-center p-5">
                    <div class="spinner-border text-primary" role="status"></div>
                    <p class="mt-3 text-muted">Carregando...</p>
                </div>
            </div>
            <div class="modal-footer border-0 pt-0">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="submit" id="btnConfirmarModalPrincipal"
                        class="btn btn-primary px-4"
                        style="background-color:#8A2BE2;border-color:#8A2BE2;">
                    Salvar
                </button>
            </div>
        </div>
    </div>
</div>

<!-- ===========================
     ESTILO VISUAL MODERNO
=========================== -->
<style>
    .modal.fade .modal-dialog {
        transition: transform 0.25s ease-out, opacity 0.25s ease-out;
        transform: translateY(-10%);
        opacity: 0;
    }

    .modal.show .modal-dialog {
        transform: translateY(0);
        opacity: 1;
    }
</style>

<!-- ===========================
     SCRIPTS MODERNOS E OTIMIZADOS
=========================== -->
@section Scripts {
    <script>
        $(function () {
            const userModalEl = document.getElementById('userModal');
            const userModal = bootstrap.Modal.getOrCreateInstance(userModalEl);
            const $modalBody = $('#userModal .modal-body');
            const $submitButton = $('#btnConfirmarModalPrincipal');
            const $userModalLabel = $('#userModalLabel');

            // ================================
            // BOTÃO: NOVO USUÁRIO
            // ================================
            $('#btnNovoUsuario').on('click', function () {
                $userModalLabel.text('Novo Responsável');
                $modalBody.html('<div class="text-center p-5"><div class="spinner-border text-primary"></div><p class="mt-3 text-muted">Carregando formulário...</p></div>');
                userModal.show();

                $submitButton.attr('form', 'formCriarUsuario')
                    .text('Salvar')
                    .show()
                    .prop('disabled', true);

                $.get('@Url.Action("_CriarUsuarioPartial", "Usuario")')
                    .done(data => {
                        $modalBody.hide().html(data).fadeIn(200);
                        $submitButton.prop('disabled', false);
                        reinicializarValidacao('#formCriarUsuario');
                    })
                    .fail(() => {
                        $modalBody.html('<div class="alert alert-danger m-3">Erro ao carregar formulário.</div>');
                        $submitButton.hide();
                    });
            });

            // ================================
            // BOTÃO: EDITAR USUÁRIO
            // ================================
            $(document).on('click', '.btn-editar-usuario', function () {
                const id = $(this).data('usuario-id');
                $userModalLabel.text('Editar Responsável');
                $modalBody.html('<div class="text-center p-5"><div class="spinner-border text-primary"></div><p class="mt-3 text-muted">Carregando dados...</p></div>');
                userModal.show();

                $submitButton.attr('form', 'formEditarUsuario')
                    .text('Salvar Alterações')
                    .show()
                    .prop('disabled', true);

                $.get('@Url.Action("_EditarUsuarioPartial", "Usuario")/' + id)
                    .done(data => {
                        $modalBody.hide().html(data).fadeIn(200);
                        $submitButton.prop('disabled', false);
                        reinicializarValidacao('#formEditarUsuario');

                        // Remove obrigatoriedade da imagem
                        const $img = $('#formEditarUsuario input[name="Imagem"]');
                        $img.removeAttr('required data-val data-val-required');
                    })
                    .fail(() => {
                        $modalBody.html('<div class="alert alert-danger m-3">Erro ao carregar dados.</div>');
                        $submitButton.hide();
                    });
            });

            // ================================
            // BOTÃO: DETALHES USUÁRIO
            // ================================
            $(document).on('click', '.btn-detalhes-usuario', function () {
                const id = $(this).data('usuario-id');
                $userModalLabel.text('Detalhes do Responsável');
                $modalBody.html('<div class="text-center p-5"><div class="spinner-border text-primary"></div><p class="mt-3 text-muted">Carregando informações...</p></div>');
                $submitButton.hide();
                userModal.show();

                $.get('@Url.Action("_DetalhesUsuarioPartial", "Usuario")/' + id)
                    .done(data => {
                        $modalBody.hide().html(data).fadeIn(200);
                    })
                    .fail(() => {
                        $modalBody.html('<div class="alert alert-danger m-3">Erro ao carregar detalhes.</div>');
                    });
            });

            // ================================
            // BOTÃO: EXCLUIR USUÁRIO
            // ================================
            $(document).on('click', '.btn-excluir-usuario', function () {
                const id = $(this).data('usuario-id');
                $userModalLabel.text('Confirmar Exclusão');
                $modalBody.html('<div class="text-center p-5"><div class="spinner-border text-danger"></div><p class="mt-3 text-muted">Preparando exclusão...</p></div>');
                userModal.show();

                $submitButton.attr('form', 'formExcluirUsuario')
                    .text('Confirmar Exclusão')
                    .removeClass('btn-primary').addClass('btn-danger')
                    .show()
                    .prop('disabled', true);

                $.get('@Url.Action("_ExcluirUsuarioPartial", "Usuario")/' + id)
                    .done(data => {
                        $modalBody.hide().html(data).fadeIn(200);
                        $submitButton.prop('disabled', false);
                    })
                    .fail(() => {
                        $modalBody.html('<div class="alert alert-danger m-3">Erro ao carregar confirmação.</div>');
                        $submitButton.hide();
                    });
            });

            // ================================
            // SUBMISSÃO AJAX (CRIAR, EDITAR, EXCLUIR)
            // ================================
            $(document).on('submit', '#formCriarUsuario, #formEditarUsuario, #formExcluirUsuario', function (e) {
                e.preventDefault();
                const form = $(this);
                const isDelete = form.attr('id') === 'formExcluirUsuario';
                const url = form.attr('action');
                const formData = new FormData(this);

                $submitButton.prop('disabled', true)
                    .html('<span class="spinner-border spinner-border-sm"></span> Processando...');

                $.ajax({
                    url, type: 'POST', data: formData,
                    processData: false, contentType: false,
                    success: result => {
                        if (result.redirectTo) {
                            if (isDelete) {
                                const successBox = $modalBody.find('#excluir-success-msg');
                                if (successBox.length) successBox.removeClass('d-none').hide().fadeIn(300);
                            }
                            showSuccess(result.message || 'Operação concluída!');
                            setTimeout(() => window.location.href = result.redirectTo, 2000);
                        } else {
                            $modalBody.html(result);
                            $submitButton.prop('disabled', false)
                                .text(isDelete ? 'Confirmar Exclusão' : 'Salvar');
                        }
                    },
                    error: jqXHR => {
                        const msg = jqXHR.responseJSON?.message || 'Erro inesperado.';
                        $modalBody.html('<div class="alert alert-danger m-3"><strong>Falha:</strong> ' + msg + '</div>');
                        $submitButton.prop('disabled', false).text('Tentar Novamente');
                    }
                });
            });

            // ================================
            // FUNÇÕES AUXILIARES
            // ================================
            function showSuccess(msg) {
                const alert = `<div class="alert alert-success alert-dismissible fade show mt-3 shadow-sm" role="alert">
                    <i class="bi bi-check-circle-fill me-2"></i>${msg}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>`;
                $('#ajax-success-alert-placeholder').html(alert);
                setTimeout(() => $('.alert').alert('close'), 3500);
            }

            function reinicializarValidacao(formSelector) {
                const $form = $(formSelector);
                $form.removeData('validator').removeData('unobtrusiveValidation');
                if ($.validator && $.validator.unobtrusive) {
                    $.validator.unobtrusive.parse($form);
                }
            }

            // ================================
            // PRÉ-VISUALIZAÇÃO DE IMAGEM (DINÂMICO)
            // ================================
            $(document).on('change', '#inputImagemModal, #inputImagemModalEditar', function (e) {
                const file = e.target.files[0];
                if (!file) return;

                const reader = new FileReader();
                reader.onload = function (ev) {
                    const previewId = e.target.id === 'inputImagemModalEditar'
                        ? '#previewImagemModalEditar'
                        : '#previewImagemModal';
                    $(previewId)
                        .attr('src', ev.target.result)
                        .addClass('border border-2 border-primary shadow-sm')
                        .css('transform', 'scale(1.05)')
                        .css('transition', 'all 0.2s ease-in-out');

                    // Volta ao normal após 300ms (efeito visual leve)
                    setTimeout(() => {
                        $(previewId).css('transform', 'scale(1)');
                    }, 300);
                };
                reader.readAsDataURL(file);
            });
        });
    </script>
}
